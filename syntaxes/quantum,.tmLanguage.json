{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Quantum",
    "fileTypes": [
        "axes",
        "qin"
    ],
    "scopeName": "source.quantum",
    "patterns": [
        {
            "comment": "boxed slice literal",
            "begin": "(<)(\\[)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.brackets.angle.quantum"
                },
                "2": {
                    "name": "punctuation.brackets.square.quantum"
                }
            },
            "end": ">",
            "endCaptures": {
                "0": {
                    "name": "punctuation.brackets.angle.quantum"
                }
            },
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#gtypes"
                },
                {
                    "include": "#lvariables"
                },
                {
                    "include": "#lifetimes"
                },
                {
                    "include": "#punctuation"
                },
                {
                    "include": "#types"
                }
            ]
        },
        {
            "comment": "macro type metavariables",
            "name": "meta.macro.metavariable.type.quantum",
            "match": "(\\$)((crate)|([A-Z][A-Za-z0-9_]*))((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?",
            "captures": {
                "1": {
                    "name": "keyword.operator.macro.dollar.quantum"
                },
                "3": {
                    "name": "keyword.other.crate.quantum"
                },
                "4": {
                    "name": "entity.name.type.metavariable.quantum"
                },
                "6": {
                    "name": "keyword.operator.key-value.quantum"
                },
                "7": {
                    "name": "variable.other.metavariable.specifier.quantum"
                }
            },
            "patterns": [
                {
                    "include": "#keywords"
                }
            ]
        },
        {
            "comment": "macro metavariables",
            "name": "meta.macro.metavariable.quantum",
            "match": "(\\$)([a-z][A-Za-z0-9_]*)((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?",
            "captures": {
                "1": {
                    "name": "keyword.operator.macro.dollar.quantum"
                },
                "2": {
                    "name": "variable.other.metavariable.name.quantum"
                },
                "4": {
                    "name": "keyword.operator.key-value.quantum"
                },
                "5": {
                    "name": "variable.other.metavariable.specifier.quantum"
                }
            },
            "patterns": [
                {
                    "include": "#keywords"
                }
            ]
        },
        {
            "comment": "macro rules",
            "name": "meta.macro.rules.quantum",
            "match": "\\b(macro_rules!)\\s+(([a-z0-9_]+)|([A-Z][a-z0-9_]*))\\s+(\\{)",
            "captures": {
                "1": {
                    "name": "entity.name.function.macro.rules.quantum"
                },
                "3": {
                    "name": "entity.name.function.macro.quantum"
                },
                "4": {
                    "name": "entity.name.type.macro.quantum"
                },
                "5": {
                    "name": "punctuation.brackets.curly.quantum"
                }
            }
        },
        {
            "comment": "modules",
            "match": "(mod)\\s+((?:r#(?!crate|[Ss]elf|super))?[a-z][A-Za-z0-9_]*)",
            "captures": {
                "1": {
                    "name": "storage.type.quantum"
                },
                "2": {
                    "name": "entity.name.module.quantum"
                }
            }
        },
        {
            "comment": "external crate imports",
            "name": "meta.import.quantum",
            "begin": "\\b(extern)\\s+(crate)",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.quantum"
                },
                "2": {
                    "name": "keyword.other.crate.quantum"
                }
            },
            "end": ";",
            "endCaptures": {
                "0": {
                    "name": "punctuation.semi.quantum"
                }
            },
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#punctuation"
                }
            ]
        },
        {
            "comment": "use statements",
            "name": "meta.use.quantum",
            "begin": "\\b(use)\\s",
            "beginCaptures": {
                "1": {
                    "name": "keyword.other.quantum"
                }
            },
            "end": ";",
            "endCaptures": {
                "0": {
                    "name": "punctuation.semi.quantum"
                }
            },
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#namespaces"
                },
                {
                    "include": "#punctuation"
                },
                {
                    "include": "#types"
                },
                {
                    "include": "#lvariables"
                }
            ]
        },
        {
            "include": "#comments"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [

                {
                    "comment": "line comments",
                    "name": "comment.line.double-slash.quantum",
                    "match": "(/*).*$",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.quantum"
                        }
                    }
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "comment": "pub as a function",
                    "match": "\\b(pub)(\\()",
                    "captures": {
                        "1": {
                            "name": "keyword.other.quantum"
                        },
                        "2": {
                            "name": "punctuation.brackets.round.quantum"
                        }
                    }
                },
                {
                    "comment": "function definition",
                    "name": "meta.function.definition.quantum",
                    "begin": "\\b(fn)\\s+((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)((\\()|(<))",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.other.fn.quantum"
                        },
                        "2": {
                            "name": "entity.name.function.quantum"
                        },
                        "4": {
                            "name": "punctuation.brackets.round.quantum"
                        },
                        "5": {
                            "name": "punctuation.brackets.angle.quantum"
                        }
                    },
                    "end": "(\\{)|(;)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.brackets.curly.quantum"
                        },
                        "2": {
                            "name": "punctuation.semi.quantum"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#keywords"
                        },
                        {
                            "include": "#lvariables"
                        },
                        {
                            "include": "#constants"
                        },
                        {
                            "include": "#gtypes"
                        },
                        {
                            "include": "#functions"
                        },
                        {
                            "include": "#lifetimes"
                        },
                        {
                            "include": "#macros"
                        },
                        {
                            "include": "#namespaces"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#types"
                        },
                        {
                            "include": "#variables"
                        }
                    ]
                },
                {
                    "comment": "function/method calls, chaining",
                    "name": "meta.function.call.quantum",
                    "begin": "((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.quantum"
                        },
                        "2": {
                            "name": "punctuation.brackets.round.quantum"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.brackets.round.quantum"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#attributes"
                        },
                        {
                            "include": "#keywords"
                        },
                        {
                            "include": "#lvariables"
                        },
                        {
                            "include": "#constants"
                        },
                        {
                            "include": "#gtypes"
                        },
                        {
                            "include": "#functions"
                        },
                        {
                            "include": "#lifetimes"
                        },
                        {
                            "include": "#macros"
                        },
                        {
                            "include": "#namespaces"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#types"
                        },
                        {
                            "include": "#variables"
                        }
                    ]
                },
                {
                    "comment": "function/method calls with turbofish",
                    "name": "meta.function.call.quantum",
                    "begin": "((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(?=::<.*>\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.quantum"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.brackets.round.quantum"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#attributes"
                        },
                        {
                            "include": "#keywords"
                        },
                        {
                            "include": "#lvariables"
                        },
                        {
                            "include": "#constants"
                        },
                        {
                            "include": "#gtypes"
                        },
                        {
                            "include": "#functions"
                        },
                        {
                            "include": "#lifetimes"
                        },
                        {
                            "include": "#macros"
                        },
                        {
                            "include": "#namespaces"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#types"
                        },
                        {
                            "include": "#variables"
                        }
                    ]
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "comment": "comma",
                    "name": "punctuation.comma.quantum",
                    "match": ","
                },
                {
                    "comment": "curly braces",
                    "name": "punctuation.brackets.curly.quantum",
                    "match": "[{}]"
                },
                {
                    "comment": "parentheses, round brackets",
                    "name": "punctuation.brackets.round.quantum",
                    "match": "[()]"
                },
                {
                    "comment": "semicolon",
                    "name": "punctuation.semi.quantum",
                    "match": ";"
                },
                {
                    "comment": "square brackets",
                    "name": "punctuation.brackets.square.quantum",
                    "match": "[\\[\\]]"
                },
                {
                    "comment": "dollor brackets",
                    "name": "punctuation.brackets.dollar.quantum",
                    "match": "[$$]"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "comment": "double-quoted strings and byte strings",
                    "name": "string.quoted.double.quantum",
                    "begin": "(b?)(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.byte.raw.quantum"
                        },
                        "2": {
                            "name": "punctuation.definition.string.quantum"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.quantum"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#escapes"
                        },
                        {
                            "include": "#interpolations"
                        }
                    ]
                },
                {
                    "comment": "double-quoted raw strings and raw byte strings",
                    "name": "string.quoted.double.quantum",
                    "begin": "(b?r)(#*)(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.byte.raw.quantum"
                        },
                        "2": {
                            "name": "punctuation.definition.string.raw.quantum"
                        },
                        "3": {
                            "name": "punctuation.definition.string.quantum"
                        }
                    },
                    "end": "(\")(\\2)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.string.quantum"
                        },
                        "2": {
                            "name": "punctuation.definition.string.raw.quantum"
                        }
                    }
                },
                {
                    "comment": "characters and bytes",
                    "name": "string.quoted.single.char.quantum",
                    "begin": "(b)?(')",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.byte.raw.quantum"
                        },
                        "2": {
                            "name": "punctuation.definition.char.quantum"
                        }
                    },
                    "end": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.char.quantum"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#escapes"
                        }
                    ]
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "comment": "variables",
                    "name": "variable.other.quantum",
                    "match": "\\b(?<!(?<!\\.)\\.)(?:r#(?!(crate|[Ss]elf|super)))?[a-z0-9_]+\\b"
                }
            ]
        }
    }
}
